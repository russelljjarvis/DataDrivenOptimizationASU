Towards Neuronal Deep Fakes:Data Driven 
Optimization of Reduced Neuronal Models
========================================================
author: Russell Jarvis, PhD Neuroscience. 
ICON Laboratory.
Co-advisors: Prof Richard Gerkin, Prof Sharon Crook.
date: 5 November 2020

First Slide
========================================================

For more details on authoring R presentations please visit <https://support.rstudio.com/hc/en-us/articles/200486468>.

- Mean model not mean measurement
- Multi spiking fits
- Preferred current versus fixed current search.
- optimal still possible despite rastrigrin's function

Models and Data are Readily Distinguishable in a Reduced Dimension Space
========================================================

![title](figures/cortical_model_data_agreement_52_1.png)


Slide With Plot
========================================================

![title](figures/GA_process.png)

Identify the counterfit
========================================================

![Identify the counterfit](figures/adexp_fit_allen_spec_id_476053392.png)
Identify the counterfit
========================================================



![Identify the counterfit](figures/adexp_fit_allen_specid_325479788.png)

Python Pandas
========================================================

![Identify the counterfit](figures/mean_model_vs_mean_measurement.png)

Python Pandas
========================================================





![Identify the counterfit](figures/28spikes_B95.png)

Python Pandas
========================================================

```{r setup}
#Sys.setenv(PATH = "$HOME/anaconda3/bin:$PATH")
#library(reticulate)
#reticulate::use_condaenv('test-env')
#use_python(Sys.which("python"))
#py_install("pandas", pip = TRUE)
library(reticulate)
library(ggplot2)
```


```{python}
import pandas as pd
dir(pd)
```
```{python}
import pandas as pd
file_name = "http://samplecsvs.s3.amazonaws.com/SalesJan2009.csv"
df = pd.read_csv(file_name)
print(df.head())
```


```{python}
import matplotlib.pyplot as plt
print(r.grouped)
plt.figure()
plt.bar(r.grouped.card, r.grouped.total)
plt.show()
```